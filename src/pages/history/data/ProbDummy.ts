export type Question = {
    id: number;
    baekNum: number;
    title: string;
    description: string;
    level: 'EASY' | 'MEDIUM' | 'HARD';
    inputDes: string,
    outputDes: string,
    exInput: string;
    exOutput: string;
    timeLimit: number;
    memoryLimit: number;
  };
  
  export const questionDummy: Question[] = [
    {
      id: 1,
      baekNum: 1012,
      title: '유기농 배추',
      description: `차세대 영농인 한나는 강원도 고랭지에서 유기농 배추를 재배하기로 하였다. 농약을 쓰지 않고 
        배추를 재배하려면 배추를 해충으로부터 보호하는 것이 중요하기 때문에, 한나는 해충 방지에 
        효과적인 배추흰지렁이를 구입하기로 결심한다. 이 지렁이는 배추근처에 서식하며 해충을 잡아 
        먹음으로써 배추를 보호한다. 특히, 어떤 배추에 배추흰지렁이가 한 마리라도 살고 있으면 
        이 지렁이는 인접한 다른 배추로 이동할 수 있어, 그 배추들 역시 해충으로부터 보호받을 수 있다. 
        한 배추의 상하좌우 네 방향에 다른 배추가 위치한 경우에 서로 인접해있는 것이다.
        한나가 배추를 재배하는 땅은 고르지 못해서 배추를 군데군데 심어 놓았다. 배추들이 모여있는 곳에는 
        배추흰지렁이가 한 마리만 있으면 되므로 서로 인접해있는 배추들이 몇 군데에 퍼져있는지 조사하면 
        총 몇 마리의 지렁이가 필요한지 알 수 있다. 예를 들어 배추밭이 아래와 같이 구성되어 있으면 
        최소 5마리의 배추흰지렁이가 필요하다. 0은 배추가 심어져 있지 않은 땅이고, 1은 배추가 심어져 있는 땅을 나타낸다.`,
      level: 'EASY',
      inputDes: `입력의 첫 줄에는 테스트 케이스의 개수 T가 주어진다. 
      그 다음 줄부터 각각의 테스트 케이스에 대해 첫째 줄에는 배추를 심은 배추밭의 가로길이 M(1 ≤ M ≤ 50)과 세로길이 N(1 ≤ N ≤ 50), 
      그리고 배추가 심어져 있는 위치의 개수 K(1 ≤ K ≤ 2500)이 주어진다. 
      그 다음 K줄에는 배추의 위치 X(0 ≤ X ≤ M-1), Y(0 ≤ Y ≤ N-1)가 주어진다. 두 배추의 위치가 같은 경우는 없다.`,
      outputDes :'각 테스트 케이스에 대해 필요한 최소의 배추흰지렁이 마리 수를 출력한다.',
      exInput: `2
                10 8 17
                0 0
                1 0
                1 1`,
      exOutput: '5 1',
      timeLimit: 1,
      memoryLimit: 128,
    },
    {
      id: 2,
      baekNum: 9372,
      title: '상근이의 여행',
      description: `상근이는 겨울방학을 맞아 N개국을 여행하면서 자아를 찾기로 마음먹었다. 
      하지만 상근이는 새로운 비행기를 무서워하기 때문에, 최대한 적은 종류의 비행기를 타고 국가들을 이동하려고 한다.
      이번 방학 동안의 비행 스케줄이 주어졌을 때, 상근이가 가장 적은 종류의 비행기를 타고 모든 국가들을 여행할 수 있도록 도와주자.
      상근이가 한 국가에서 다른 국가로 이동할 때 다른 국가를 거쳐 가도(심지어 이미 방문한 국가라도) 된다.`,
      level: 'EASY',
      inputDes: `첫 번째 줄에는 테스트 케이스의 수 T(T ≤ 100)가 주어지고,

                각 테스트 케이스마다 다음과 같은 정보가 주어진다.

                1. 첫 번째 줄에는 국가의 수 N(2 ≤ N ≤ 1 000)과 비행기의 종류 M(1 ≤ M ≤ 10 000) 가 주어진다.
                2. 이후 M개의 줄에 a와 b 쌍들이 입력된다. a와 b를 왕복하는 비행기가 있다는 것을 의미한다. (1 ≤ a, b ≤ n; a ≠ b) 
                3. 주어지는 비행 스케줄은 항상 연결 그래프를 이룬다.`,
      outputDes :`테스트 케이스마다 한 줄을 출력한다.
                상근이가 모든 국가를 여행하기 위해 타야 하는 비행기 종류의 최소 개수를 출력한다.`,
      exInput: '3 1',
      exOutput: '2',
      timeLimit: 1,
      memoryLimit: 128,
    },
    {
        id: 3,
        baekNum: 2720,
        title: '세탁소 사장 동혁',
        description: `미국으로 유학간 동혁이는 세탁소를 운영하고 있다. 동혁이는 최근에 아르바이트로 고등학생 리암을 채용했다.

                        동혁이는 리암에게 실망했다.

                        리암은 거스름돈을 주는 것을 자꾸 실수한다.

                        심지어 $0.5달러를 줘야하는 경우에 거스름돈으로 $5달러를 주는것이다!

                        어쩔수 없이 뛰어난 코딩 실력을 발휘해 리암을 도와주는 프로그램을 작성하려고 하지만, 디아블로를 하느라 코딩할 시간이 없어서 이 문제를 읽고 있는 여러분이 대신 해주어야 한다.

                        거스름돈의 액수가 주어지면 리암이 줘야할 쿼터(Quarter, $0.25)의 개수, 다임(Dime, $0.10)의 개수, 니켈(Nickel, $0.05)의 개수, 페니(Penny, $0.01)의 개수를 구하는 프로그램을 작성하시오. 거스름돈은 항상 $5.00 이하이고, 손님이 받는 동전의 개수를 최소로 하려고 한다. 예를 들어, $1.24를 거슬러 주어야 한다면, 손님은 4쿼터, 2다임, 0니켈, 4페니를 받게 된다.`,
        level: 'EASY',
        inputDes: `첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 거스름돈 C를 나타내는 정수 하나로 이루어져 있다. C의 단위는 센트이다. (1달러 = 100센트) (1<=C<=500)`,
        outputDes :`각 테스트케이스에 대해 필요한 쿼터의 개수, 다임의 개수, 니켈의 개수, 페니의 개수를 공백으로 구분하여 출력한다.`,
        exInput: `3
                    124
                    25
                    194`,
        exOutput: `4 2 0 4
                1 0 0 0
                7 1 1 4`,
        timeLimit: 1,
        memoryLimit: 128,
      },
  ];
  